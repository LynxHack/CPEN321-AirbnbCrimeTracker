version: "3"

services:
  microservice:
    build: .
    ports:
        - 5000:5000
    volumes:
        - .:/code
    network_mode: "host"
    hostname: localhost
  app:
    container_name: app # How the container will appear when listing containers from the CLI
    image: node:10 # The <container-name>:<tag-version> of the container, in this case the tag version aligns with the version of node
    user: node # The user to run as in the container
    working_dir: "/app" # Where to container will assume it should run commands and where you will start out if you go inside the container
    network_mode: "host"
    hostname: localhost
    ports:
    - 3000:3000 # <host-port>:<container-port> to listen to, so anything running on port 3000 of the container will map to port 3000 on our localhost
    volumes:
    - ./:/app # <host-directory>:<container-directory> this says map the current directory from your system to the /app directory in the docker container
    command: ["./wait-for-it.sh", "database:3306", "-t", "5", "--", "node", "server.js"] # The command docker will execute when starting the container, this command is not allowed to exit, if it does your container will stop
    depends_on:
      - database
  database:
      image: 'mysql:5.6.45'
      network_mode: "host"
      hostname: localhost
      environment:
        MYSQL_PASSWORD: 'password'
        MYSQL_ROOT_PASSWORD: 'password'
      ports:
        - 3306:3306
      logging:
        driver: none
      volumes:
        - my-datavolume:/var/lib/mysql
volumes:
  my-datavolume:
